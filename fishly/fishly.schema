#
# Help output

type handlerGroup struct {
	help "Handler group whose handlers have similar function or deal with similar objects"
	text -blocks {
		block -ts bold -ts blue name type
		block help
	}
	
	type handler struct {
		type option struct {
			var index int {
				help "Index (for positional arguments)"
			}
			var -list aliases string {
				help "Option alias list (for options)"
			}
			var argName string {
				help "Descriptive name of positional argument or optional value"
			}
			var slice bool {
				help "Flag which is true for positional arguments that can be listed multiple times"
			}
			var optional bool {
				help "Flag which is true for options and arguments that are not required for handler execution"
			}
			var counting bool {
				help "Flag which is true for options without arguments that can be specified more than once"
			}
			var defaultValue variant
			var help string {
				help "Help string for an option"
			}
			
			help "Option is passed to handler as option with dash, followed by optional argument or positional handler argument"
		}
		type options array option {
			text -table {
				col -> -w 2 index
				col -hdr "ARG/OPT" aliases argName
				col -at 20 -w 10 -> slice optional counting
				col -at 30 -w 8 -hdr "DEFAULT" defaultValue
				col -hdr "HELP" help
			}
		}
		
		var name string {
			value "exit" {
				text { style -ts red }
			}
			text { style -ts blue }
		}
		var usage string
		var help string
		var options
		
		help "Handler implements functionality needed to accomplish user request"
	}
	type handlers array handler {
		text -blocks {
			block name usage
			block help
		}
	}
	
	type handlerGroupType enum {
		value "commands" {
			help "corresponding handler group contains commands"
		} 
		value "io" {
			help "corresponding handler group have I/O sinks, formatters and filters"
		}
	}
	
	var name string
	var type handlerGroupType
	var handlers
}
type handlerGroups array handlerGroup

command help handlerGroups {
	help "Shows help on various commands and handlers"
	opt -arg 1 {
		help "If specified, shows full help on this handler (-s)"
	}
	opt -opt builtin {
		help "If specified, shows help on builtin instead of general handler"
	}
}

#
# history output

type history union {
	type context struct {
		var index int
		var url string
	}
	type contexts array context {
		text -table {
			col -w 7 -hdr INDEX index
			col -hdr URL url
		}
	}
	var contexts
}

command history history {
	help "Shows history of CLI operations and states"
	opt -opt ctx {
		help "Shows history of contexts"
	}
}
